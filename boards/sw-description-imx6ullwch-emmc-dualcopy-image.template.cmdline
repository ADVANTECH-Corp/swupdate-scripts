software =
{
	version = "1.0";
	description = "Firmware update for wireless charger hub Project";
	hardware-compatibility: [ "1.0", "1.2", "1.3"];

	imx6ull14x14evk: {
		embedded-script ="
--[[
	This script will try to get /pro/cmdline and decide if the update is allowed.
	We must use lua embedded script here, because install-directly is used.
]]
-- Include swupdate library to use TRACE / ERROR
require (\"swupdate\")

INPUT = 1
OUTPUT = 0

--[[
	Some functions are simply retrieved from LUA examples
	see book 'Programming in Lua' or some snipset from internet.
]]

function file_exists(filename)
	local file=io.open(filename,'r')
	if file~=nil then io.close(file) return true else return false end
end

function writeToFile (filename, data)
	local file=io.open(filename, 'w')
	file:write(data)
	file:close()
end

function readFromFile (filename)
	if file_exists(filename) then
		local file=io.open(filename, 'r')
		local data = file:read(1)
		file:close()
		return data
	else
		return \"\"
	end
end

function allowInstall(image)

	-- Completely unuseful, but it is to show how to get values from image

	for k,l in pairs(image) do
		swupdate.trace(\"image[\" .. tostring(k) .. \"] = \" .. tostring(l))
	end

	local cmdline = readFromFile('/proc/cmdline')
	local boot_mmc_part = string.match(cmdline, 'mmcblk1p%d+')
	if (boot_mmc_part == "mmcblk1p10") then
		swupdate.trace(\"Updated allowed: go on !\")
		return true, image
	else
		swupdate.trace(\"Updated forbidden: STOP !\")
		return false, image
	end
end
";
		images: (
			{
				filename = "ddr_cfg_samsung_iot_hub.imx.mbpB";
				sha256 = "<ddr_cfg_samsung_iot_hub.imx.mbpB_sha256>";
				device = "/dev/mmcblk1p2";
				installed-directly = true;
			},
			{
				filename = "lk.imxB";
				sha256 = "<lk.imxB_sha256>";
				device = "/dev/mmcblk1p4";
				installed-directly = true;
			},
			{
				filename = "zImageB";
				sha256 = "<zImageB_sha256>";
				device = "/dev/mmcblk1p6";
				installed-directly = true;
			},
			{
				filename = "imx6ull-14x14-evk-emmc.dtb.mbpB";
				sha256 = "<imx6ull-14x14-evk-emmc.dtb.mbpB_sha256>";
				device = "/dev/mmcblk1p8";
				installed-directly = true;
				hook = "allowInstall";
			},
			{
				filename = "rootfs.ext4B";
				sha256 = "<rootfs.ext4B_sha256>";
				device = "/dev/mmcblk1p10";
				installed-directly = true;
				hook = "allowInstall";
			}

		);
		scripts: (
			{
				filename = "validate_boot_slot.sh";
				sha256 = "<validate_boot_slot.sh_sha256>";
				type = "preinstall";
			},
			{
				filename = "env_set_bootslot.sh";
				sha256 = "<env_set_bootslot.sh_sha256>";
				type = "postinstall";
			}
		);
	}
}
